version: "3.8"

services:
  nats-server:
    image: nats:latest
    ports:
      - "8222:8222" # puerto de nats

  client-gateway:
    build: ./client-gateway # iniciamos el proceso de contruiccion de la imagen
    ports:
      - ${CLIENT_GATE_WAY_PORT}:3000 # puerto de la aplicacion
    volumes:
      - ./client-gateway/src:/usr/src/app/src # montamos el directorio src en el contenedor para detecci√≥n de cambios,:/usr/src/app/src es el directorio dentro del contenedor de node
    command: npm run start:dev

    environment:
      - PORT=3000
      - NATS_SERVERS= nats://nats-server:4222

  product-ms:
    build: ./products-ms
    ports:
      - "3001:3001"
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev

    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=file:./dev.db

  # Orders DB
  orders-db:
    container_name: orders_database
    image: postgres:16.2
    restart: always
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=ordersdb

  order-ms:
    depends_on:
      - orders-db
    build: ./orders-ms
    ports:
      - "3002:3002"
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - DATABASE_URL=postgresql://postgres:123456@orders-db:5432/ordersdb?schema=public
      - NATS_SERVERS=nats://nats-server:4222
      - PRODUCT_MICROSERVICE_HOST=localhost
      - PRODUCT_MICROSERVICE_PORT=3001
